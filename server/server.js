const express = require('express');
const mongoose = require('mongoose');
const dotenv = require('dotenv');
const cors = require('cors');

dotenv.config();

const app = express();

// Подключение к MongoDB
mongoose.connect(process.env.MONGODB_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
})
    .then(() => console.log('СЕРВЕР РАБОТАЕТ КОРРЕКТНО!'))
    .catch(err => console.error(err));

// Middleware
app.use(express.json());
app.use(cors());

// Routes
app.use('/api/products', require('./routes/products'));
app.use('/api/users', require('./routes/users'));
app.use('/api/admin', require('./routes/admin'));
app.use('/api/orders', require('./routes/orders'));


const PORT = process.env.PORT || 5500;
app.listen(PORT, () => console.log(`СЕРВАР РАБОТАЕТ НА ${PORT} ПОРТУ!`));




//
// Привет. Мне нужна твоя помощь, мне вместе с тобой
// нужно построить , правильно работающий код. Давай
// будем строить код последовательно, чтобы было легче
// его прослеживать, с использованием nodemon. Если
// нужно будем корректировать его. Я дам базовое
// задание, а ты если это будет лучше корректируй его,
//     для правильной работы кода. Вот задание: Я уже
// пробовал писать код с использованием MERN сам,
//     общее понимание у меня уже есть. Мне нужен
// интернет магазин у которого должен быть не большой header
//     , где слевой стороны должно быть название
// магазина "NurTech" ,  по середине должно быть
// окошко input для поиска товара.
//     потом два значка "телеграмм" и "инстаграмм" ,
//     потом кнопка для логина "Login"  и затем кнопка
// предварительной покупки "Купить". При нажатии на
// кнопку "Купить". нужно чтобы открылось окно, карточки
// с выбранными товарами, где клиенту можно будет удалять
// или добавлять количество выбранных товаров , также
// там должна быть кнопка "Покупка заказа"  и "Выход".
//     После нажатия на кнопку "Покупка заказа" Из базы
// данных в MongoDB должны удалять товары, которые решил
// купить клиент и клиент должен будет вернуться на главную
// страницу, а при нажатии на кнопку "Выход" что клиент мог
// сразу вернуться на главную страницу. При нажатии на
// кнопку "Login" должно открываться окошко в котором будет
// две form, первая форма с заголовком "Зарегистрировать" -
// для регистрации и двумя input для ввода имени и пароля,
//     а вторая форма "Авторизоваться"- для авторизации
// и также двумя input для ввода имени и пароля. Нужно
// чтобы клиент мог зарегестрироваться, если он не
// зарегистрирован или авторизоваться, если он зарегистрирован.
//     При авторизации должна появляться ещё одна кнопка
// "Моя история" ,при нажатии на которую клиент мог
// посмотреть историю своих покупок, какие товары он
// покупал и когда. И header должен быть постоянно на
// одном месте , даже при скролле вниз экрана для просмотра
// товаров. С левой стороны монитора, чуть ниже header, должен
// быть sidetbar , с заголовком "Наши товары" , где под
// заголовком "Наши товары"  должны находит названия
// электротехники , например : Смартфоны, Айфоны, Ноутбуки,
//     Мониторы, Телевизоры, Наушники, Аксессуары. sidetbar
// должен занимать 1/5 от ширины монитора. А остальную ширину
// должны будут занимать карточки, с товарами. Карточки должны
// размещаться в три столбика. Расстояние ,между карточками,
//     должно быть 5px.  На каждой карточке, обязательно будут
// картинка товара, название товара, общее описание, которое
// должно быть 70 символов, и снизу должна быть кнопка покупки
// "Купить", при нажатии на которую товар должен будет
// переместиться в предварительные закупки. Также при нажатии
// на картику на карточке, должно открываться окно этой карточки.
//     Окно карточки должно будет открывать по середине
// монитора, занимать 80 % ширины монитора и высоту минимум
// 80% монитора. В окне карточки должна будет быть картинка
// с карточки, полное описание товара, характеристики товара ,
//     кнопка "Купить" при нажатии на которую ,товар этой
// карточки должен переместиться в предварительные покупки
// и также должна быть кнопка "Выход", для перемещения на
// главную страницу. Также при авторизации  , если пользователь,
//     к имени в input, добавит "/IADMIN" , нужно чтобы
// открывалась административная панель. Административная
// панель, в открытом виде,  должна находиться посередине
// монитора и занимать 90% монитора. При помощи административной
// панели, нужно чтобы администратор мог добавить новую
// карточку, с нужной фотографией к этой карточке и нужным
// текстом, как для карточки на главной странице, так и для
// информации которую клиент видет после открытия
// карточки(информацию о товаре и характеристику) ,
// также нужно чтобы администратор мог брать картинки для
// вставки в карточку с разных источников прямо из
// административной панели. Также в административной
// панели нужно чтобы администратор мог изменить или удалить
// существующие карточки. Ещё мне нужна будет схема по
// расположению папок и файлов в рабочей директории. Не забудь
// что это нужно с использованием MERN.  Node.js у меня
// установлен, если мне нужны какие то ещё зависимости ты
// мне тоже дай их для копирования, пожалуйста. И не забудь
// добавить css для расстановки и улучшения общего фронтального
// вида. Да ещё элементы li в sidebar должны быть кликабельны,
//     при нажатии на один из названий , чтобы отображались
// карточки относящиеся к этому названию. Можешь добавить от
// себя нужный функционал для более удобного использования
// нашего интернет магазина и сделай в деловом бизнес стиле,
//     если нужно будет подключи bootstrap или tailwinds.
//     Мой вход в MongoDB : mongodb+srv://bakytdeveloper:<password>@nurtech.7wingan.mongodb.net/nur_tech?retryWrites=true&w=majority ;
//  База данных, на данный момент, абсолютно пустая, там
// нужно создать кластер "nurTech" и в нём два хранилища
// для товаров "products" и для клиентов "users" .
//     А как сделать авторизацию администратора правильно
// я не знаю, помоги мне с этим тоже , как это должно быть
// правильно и прокомментируй , как ты это сделал .
//     Если нужен Api ключ к MongoDB скажи мне об этом.  Спасибо.
//














